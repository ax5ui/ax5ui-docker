{"version":3,"sources":["ax5docker.min.js","ax5docker.js","ax5docker-tmpl.js"],"names":["UI","ax5","ui","U","util","addClass","className","version","ax5docker","_this","this","cfg","instanceId","getGuid","config","theme","animateTime","columnKeys","panels","$panels","repaintPanels","getPanelProcessor","stack","_pane","_parent","jQuery","row","column","panel","type","name","header","body","getPanels","parent","$dom","$childs","length","pi","pl","append","console","log","$target","html","init","_config","extend","target","onStateChanged","onClick","onLoad","onDataChanged","info","getError","setPanels","_panels","main","arguments","isObject","setConfig","apply","DOCKER","docker","tmpl","get","tmplName","data","mustache","render","call"],"mappings":"AAAA,cCMA,WAEA,GAAAA,GAAAC,IAAAC,GACAC,EAAAF,IAAAG,IAEAJ,GAAAK,UACAC,UAAA,SACAC,QAAA,cACA,WAWA,GAAAC,GAAA,WAAA,GAAAC,GAAAC,KAEAC,EAAAA,MAEAD,MAAAE,WAAAX,IAAAY,UACAH,KAAAI,QACAC,MAAA,UACAC,YAAA,IACAC,eAGAP,KAAAQ,UACAR,KAAAS,WAEAR,EAAAD,KAAAI,MAGA,IAAAM,GAAA,WACA,GAAAC,IACAC,MADA,SACAC,EAAAC,GACA,MAAAC,QAAA,6FAKAC,IAPA,SAOAH,EAAAC,GACA,MAAAC,QAAA,+CAEAE,OAVA,SAUAJ,EAAAC,GACA,MAAAC,QAAA,kDAEAG,MAbA,SAaAL,EAAAC,GACA,MAAA,SAAAA,EAAAK,MAEAC,KAAAP,EAAAO,KACAC,OAAAR,EAAAQ,OACAC,KAAAT,EAAAS,MAIAP,OAAA,8FASAQ,EAAA,QAAAA,GAAAf,EAAAgB,GACA,GAAAC,GAAAA,OACAC,EAAAA,MACA,IAAAlB,GAAAA,EAAAmB,OAAA,CACA,IAAA,GAAAC,GAAA,EAAAC,EAAArB,EAAAmB,OAAAC,EAAAC,EAAAD,IACAH,EAAAd,EAAAH,EAAAoB,GAAAT,MAAAX,EAAAoB,GAAAJ,GACA,MAAAA,GAAA,UAAAA,EAAAL,MACAO,EAAAH,EAAAf,EAAAoB,GAAApB,OAAAA,EAAAoB,IACAF,GAAAD,EAAAK,OAAAJ,KAGAK,QAAAC,IAAA,cACAD,QAAAC,IAAAP,GAIA,OAAAA,GAEA,OAAA,GAIAA,EAAAV,OAAA,sCACAU,GAAAK,OAAAP,EAAAxB,EAAAS,OAAA,OACAT,EAAAkC,QAAAC,KAAAT,GASAzB,MAAAmC,KAAA,SAAAC,GAEA,MADAnC,GAAAc,OAAAsB,QAAA,KAAApC,EAAAmC,GACAnC,EAAAqC,QAKAtC,KAAAiC,QAAAlB,OAAAd,EAAAqC,QAEAtC,KAAAQ,OAAAP,EAAAO,WAEAR,KAAAuC,eAAAtC,EAAAsC,eACAvC,KAAAwC,QAAAvC,EAAAuC,QACAxC,KAAAyC,OAAAxC,EAAAwC,OACAzC,KAAA0C,cAAAzC,EAAAyC,kBAGAhC,OAdAqB,QAAAC,IAAAzC,IAAAoD,KAAAC,SAAA,YAAA,MAAA,SACA5C,OAmBAA,KAAA6C,UAAA,SAAAC,GAMA,MAJA9C,MAAAQ,OAAAsC,MAGApC,IACAV,MAIAA,KAAA+C,KAAA,WACAC,WAAAvD,EAAAwD,SAAAD,UAAA,KACAhD,KAAAkD,UAAAF,UAAA,KAEAG,MAAAnD,KAAAgD,WAIA,OAAAlD,UCnJA,WAEA,GAAAsD,GAAA7D,IAAAC,GAAA6D,OAEA7C,EAAA,SAAAD,GACA,MAAA,4FAUA6C,GAAAE,MACA9C,OAAAA,EACA+C,IAAA,SAAAC,EAAAC,EAAAlD,GACA,MAAAhB,KAAAmE,SAAAC,OAAAP,EAAAE,KAAAE,GAAAI,KAAA5D,KAAAO,GAAAkD","file":"ax5docker.min.js","sourcesContent":["\"use strict\";\n\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n    var UI = ax5.ui,\n        U = ax5.util;\n\n    UI.addClass({\n        className: \"docker\",\n        version: \"${VERSION}\"\n    }, function () {\n\n        /**\n         * @class ax5docker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var ax5docker = new ax5.ui.ax5docker();\n         * ```\n         */\n        var ax5docker = function ax5docker() {\n            var _this = this;\n\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                columnKeys: {}\n            };\n            // 패널 정보\n            this.panels = [];\n            this.$panels = [];\n\n            cfg = this.config;\n\n            var repaintPanels = function repaintPanels() {\n                var getPanelProcessor = {\n                    stack: function stack(_pane, _parent) {\n                        return jQuery('<div data-ax5docker-pane=\"\">' + '<ul></ul>' + '<div data-ax5docker-pane-item-views=\"\"></div>' + '</div>');\n                    },\n                    row: function row(_pane, _parent) {\n                        return jQuery('<div data-ax5docker-pane-axis=\"row\"></div>');\n                    },\n                    column: function column(_pane, _parent) {\n                        return jQuery('<div data-ax5docker-pane-axis=\"column\"></div>');\n                    },\n                    panel: function panel(_pane, _parent) {\n                        if (_parent.type == \"stack\") {\n                            return {\n                                name: _pane.name,\n                                header: _pane.header,\n                                body: _pane.body\n                            };\n                        } else {\n                            return jQuery('<div data-ax5docker-pane=\"\">' + '<ul></ul>' + '<div data-ax5docker-pane-item-views=\"\"></div>' + '</div>');\n                        }\n                    }\n                };\n\n                // $parent dom 으로 삽입하는 방식으로 변경해야 하겠음..\n                var getPanels = function getPanels(panels, parent) {\n                    var $dom = void 0;\n                    var $childs = void 0;\n                    if (panels && panels.length) {\n                        for (var pi = 0, pl = panels.length; pi < pl; pi++) {\n                            $dom = getPanelProcessor[panels[pi].type](panels[pi], parent);\n                            if (parent == null || parent.type !== \"stack\") {\n                                $childs = getPanels(panels[pi].panels, panels[pi]);\n                                if ($childs) $dom.append($childs);\n                            } else {\n                                // \n                                console.log(\"stack type\");\n                                console.log($dom);\n                            }\n                        }\n\n                        return $dom;\n                    } else {\n                        return false;\n                    }\n                };\n\n                var $dom = jQuery('<div data-ax5docker-panes=\"\"></div>');\n                $dom.append(getPanels(_this.panels, null));\n                _this.$target.html($dom);\n            };\n\n            /**\n             * @method ax5docker.setConfig\n             * @param {Object} config\n             * @param {Array} config.panels\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                    return this;\n                }\n                // memory target\n                this.$target = jQuery(cfg.target);\n                // set panels\n                this.panels = cfg.panels || [];\n                // event Functions\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.onDataChanged;\n\n                // 패널 다시 그리기\n                repaintPanels();\n            };\n            /**\n             * @method ax5docker.setPanels\n             * @returns {ax5docker}\n             */\n            this.setPanels = function (_panels) {\n                // set panels\n                this.panels = _panels || [];\n\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n\n        return ax5docker;\n    }());\n})();\n// ax5.ui.docker.tmpl\n(function () {\n\n    var DOCKER = ax5.ui.docker;\n\n    var panels = function panels(columnKeys) {\n        return \" \\n{{#panels}}\\n{{#panels}}\\n{{/panels}}\\n{{^panels}}\\n{{/panels}}\\n{{/panels}}\\n        \";\n    };\n\n    DOCKER.tmpl = {\n        \"panels\": panels,\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n    let UI = ax5.ui,\n        U = ax5.util;\n\n    UI.addClass({\n        className: \"docker\",\n        version: \"${VERSION}\"\n    }, (function () {\n\n        /**\n         * @class ax5docker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var ax5docker = new ax5.ui.ax5docker();\n         * ```\n         */\n        let ax5docker = function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                columnKeys: {}\n            };\n            // 패널 정보\n            this.panels = [];\n            this.$panels = [];\n\n            cfg = this.config;\n\n\n            let repaintPanels = () => {\n                let getPanelProcessor = {\n                    stack(_pane, _parent){\n                        return jQuery('<div data-ax5docker-pane=\"\">' +\n                            '<ul></ul>' +\n                            '<div data-ax5docker-pane-item-views=\"\"></div>' +\n                            '</div>');\n                    },\n                    row(_pane, _parent){\n                        return jQuery('<div data-ax5docker-pane-axis=\"row\"></div>');\n                    },\n                    column(_pane, _parent){\n                        return jQuery('<div data-ax5docker-pane-axis=\"column\"></div>');\n                    },\n                    panel(_pane, _parent){\n                        if (_parent.type == \"stack\") {\n                            return {\n                                name: _pane.name,\n                                header: _pane.header,\n                                body: _pane.body\n                            }\n                        }\n                        else {\n                            return jQuery('<div data-ax5docker-pane=\"\">' +\n                                '<ul></ul>' +\n                                '<div data-ax5docker-pane-item-views=\"\"></div>' +\n                                '</div>');\n                        }\n                    }\n                };\n\n                // $parent dom 으로 삽입하는 방식으로 변경해야 하겠음..\n                let getPanels = (panels, parent) => {\n                    let $dom;\n                    let $childs;\n                    if (panels && panels.length) {\n                        for (let pi = 0, pl = panels.length; pi < pl; pi++) {\n                            $dom = getPanelProcessor[panels[pi].type](panels[pi], parent);\n                            if (parent == null || parent.type !== \"stack\") {\n                                $childs = getPanels(panels[pi].panels, panels[pi]);\n                                if ($childs) $dom.append($childs);\n                            } else {\n                                // \n                                console.log(\"stack type\");\n                                console.log($dom);\n                            }\n                        }\n\n                        return $dom;\n                    } else {\n                        return false;\n                    }\n                };\n\n                let $dom = jQuery('<div data-ax5docker-panes=\"\"></div>');\n                $dom.append(getPanels(this.panels, null));\n                this.$target.html($dom);\n            };\n\n\n            /**\n             * @method ax5docker.setConfig\n             * @param {Object} config\n             * @param {Array} config.panels\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                    return this;\n                }\n                // memory target\n                this.$target = jQuery(cfg.target);\n                // set panels\n                this.panels = cfg.panels || [];\n                // event Functions\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.onDataChanged;\n\n                // 패널 다시 그리기\n                repaintPanels();\n            };\n            /**\n             * @method ax5docker.setPanels\n             * @returns {ax5docker}\n             */\n            this.setPanels = function (_panels) {\n                // set panels\n                this.panels = _panels || [];\n\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n\n        };\n\n        return ax5docker;\n    })());\n\n})();","// ax5.ui.docker.tmpl\n(function () {\n\n    let DOCKER = ax5.ui.docker;\n\n    let panels = function (columnKeys) {\n        return ` \n{{#panels}}\n{{#panels}}\n{{/panels}}\n{{^panels}}\n{{/panels}}\n{{/panels}}\n        `;\n    };\n\n    DOCKER.tmpl = {\n        \"panels\": panels,\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();"]}