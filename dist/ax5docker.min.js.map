{"version":3,"sources":["ax5docker.min.js","ax5docker.js","ax5docker-tmpl.js"],"names":["UI","ax5","ui","U","util","addClass","className","version","ax5docker","_this","this","cfg","instanceId","getGuid","config","theme","animateTime","columnKeys","panels","repaintPanels","console","log","target","$target","html","DOCKER","tmpl","get","init","_config","jQuery","extend","onStateChanged","onClick","onLoad","onDataChanged","body","info","getError","setPanels","_panels","main","arguments","isObject","setConfig","apply","docker","tmplName","data","mustache","render","call"],"mappings":"AAAA,cCMA,WAEA,GAAAA,GAAAC,IAAAC,GACAC,EAAAF,IAAAG,IAEAJ,GAAAK,UACAC,UAAA,SACAC,QAAA,cACA,WAWA,GAAAC,GAAA,WAAA,GAAAC,GAAAC,KAEAC,EAAAA,MAEAD,MAAAE,WAAAX,IAAAY,UACAH,KAAAI,QACAC,MAAA,UACAC,YAAA,IACAC,eAGAP,KAAAQ,UACAP,EAAAD,KAAAI,MAEA,IAAAK,GAAA,WACAC,QAAAC,IAAAZ,EAAAK,OAAAQ,QACAb,EAAAc,QAAAC,KAAAC,OAAAC,KAAAC,IAAA,UAAAT,OAAAT,EAAAS,UASAR,MAAAkB,KAAA,SAAAC,GAEA,MADAlB,GAAAmB,OAAAC,QAAA,KAAApB,EAAAkB,GACAlB,EAAAW,QAKAZ,KAAAa,QAAAO,OAAAnB,EAAAW,QAEAZ,KAAAQ,OAAAP,EAAAO,WAEAR,KAAAsB,eAAArB,EAAAqB,eACAtB,KAAAuB,QAAAtB,EAAAsB,QACAvB,KAAAwB,OAAAvB,EAAAuB,OACAxB,KAAAyB,cAAAxB,EAAAyB,KAAAD,kBAGAhB,OAdAC,QAAAC,IAAApB,IAAAoC,KAAAC,SAAA,YAAA,MAAA,SACA5B,OAmBAA,KAAA6B,UAAA,SAAAC,GAMA,MAJA9B,MAAAQ,OAAAsB,MAGArB,IACAT,MAIAA,KAAA+B,KAAA,WACAC,WAAAvC,EAAAwC,SAAAD,UAAA,KACAhC,KAAAkC,UAAAF,UAAA,KAEAG,MAAAnC,KAAAgC,WAIA,OAAAlC,UC1FA,WAEA,GAAAiB,GAAAxB,IAAAC,GAAA4C,OAEA5B,EAAA,SAAAD,GACA,MAAA,wBAKAQ,GAAAC,MACAR,OAAAA,EACAS,IAAA,SAAAoB,EAAAC,EAAA/B,GACA,MAAAhB,KAAAgD,SAAAC,OAAAzB,EAAAC,KAAAqB,GAAAI,KAAAzC,KAAAO,GAAA+B","file":"ax5docker.min.js","sourcesContent":["\"use strict\";\n\n/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n    var UI = ax5.ui,\n        U = ax5.util;\n\n    UI.addClass({\n        className: \"docker\",\n        version: \"${VERSION}\"\n    }, function () {\n\n        /**\n         * @class ax5docker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var ax5docker = new ax5.ui.ax5docker();\n         * ```\n         */\n        var ax5docker = function ax5docker() {\n            var _this = this;\n\n            var self = this,\n                cfg = void 0;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                columnKeys: {}\n            };\n            // 패널 정보\n            this.panels = [];\n            cfg = this.config;\n\n            var repaintPanels = function repaintPanels() {\n                console.log(_this.config.target);\n                _this.$target.html(DOCKER.tmpl.get(\"panels\", { panels: _this.panels }));\n            };\n\n            /**\n             * @method ax5docker.setConfig\n             * @param {Object} config\n             * @param {Array} config.panels\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                    return this;\n                }\n                // memory target\n                this.$target = jQuery(cfg.target);\n                // set panels\n                this.panels = cfg.panels || [];\n                // event Functions\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n\n                // 패널 다시 그리기\n                repaintPanels();\n            };\n            /**\n             * @method ax5docker.setPanels\n             * @returns {ax5docker}\n             */\n            this.setPanels = function (_panels) {\n                // set panels\n                this.panels = _panels || [];\n\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }.apply(this, arguments);\n        };\n\n        return ax5docker;\n    }());\n})();\n// ax5.ui.docker.tmpl\n(function () {\n\n    var DOCKER = ax5.ui.docker;\n\n    var panels = function panels(columnKeys) {\n        return \" \\n        \\n        \";\n    };\n\n    DOCKER.tmpl = {\n        \"panels\": panels,\n        get: function get(tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n})();","/*\n * Copyright (c) 2017. tom@axisj.com\n * - github.com/thomasjang\n * - www.axisj.com\n */\n\n(function () {\n\n    let UI = ax5.ui,\n        U = ax5.util;\n\n    UI.addClass({\n        className: \"docker\",\n        version: \"${VERSION}\"\n    }, (function () {\n\n        /**\n         * @class ax5docker\n         * @classdesc\n         * @author tom@axisj.com\n         * @example\n         * ```\n         * var ax5docker = new ax5.ui.ax5docker();\n         * ```\n         */\n        let ax5docker = function () {\n            let self = this,\n                cfg;\n\n            this.instanceId = ax5.getGuid();\n            this.config = {\n                theme: 'default',\n                animateTime: 250,\n                columnKeys: {}\n            };\n            // 패널 정보\n            this.panels = [];\n            cfg = this.config;\n\n            let repaintPanels = () => {\n                console.log(this.config.target);\n                this.$target.html(DOCKER.tmpl.get(\"panels\", {panels: this.panels}));\n            };\n\n\n            /**\n             * @method ax5docker.setConfig\n             * @param {Object} config\n             * @param {Array} config.panels\n             */\n            this.init = function (_config) {\n                cfg = jQuery.extend(true, {}, cfg, _config);\n                if (!cfg.target) {\n                    console.log(ax5.info.getError(\"ax5docker\", \"401\", \"init\"));\n                    return this;\n                }\n                // memory target\n                this.$target = jQuery(cfg.target);\n                // set panels\n                this.panels = cfg.panels || [];\n                // event Functions\n                this.onStateChanged = cfg.onStateChanged;\n                this.onClick = cfg.onClick;\n                this.onLoad = cfg.onLoad;\n                this.onDataChanged = cfg.body.onDataChanged;\n\n                // 패널 다시 그리기\n                repaintPanels();\n            };\n            /**\n             * @method ax5docker.setPanels\n             * @returns {ax5docker}\n             */\n            this.setPanels = function (_panels) {\n                // set panels\n                this.panels = _panels || [];\n\n                // 패널 다시 그리기\n                repaintPanels();\n                return this;\n            };\n\n            // 클래스 생성자\n            this.main = (function () {\n                if (arguments && U.isObject(arguments[0])) {\n                    this.setConfig(arguments[0]);\n                }\n            }).apply(this, arguments);\n\n        };\n\n        return ax5docker;\n    })());\n\n})();","// ax5.ui.docker.tmpl\n(function () {\n\n    let DOCKER = ax5.ui.docker;\n\n    let panels = function (columnKeys) {\n        return ` \n        \n        `;\n    };\n\n    DOCKER.tmpl = {\n        \"panels\": panels,\n        get: function (tmplName, data, columnKeys) {\n            return ax5.mustache.render(DOCKER.tmpl[tmplName].call(this, columnKeys), data);\n        }\n    };\n\n})();"]}